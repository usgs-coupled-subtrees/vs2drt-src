#ifndef _INC_DOCSTRINGS_H
#define _INC_DOCSTRINGS_H

#include <string>

// get_component_name_docstring
// get_components_docstring
// get_grid_size_docstring
// initialize_docstring
// update_docstring
// update_until_docstring

///////////////////////////////////////////////////////////////////////////////

const std::string get_component_name_docstring =
R"pbdoc(Name of the component

get_component_name returns the component name--"BMI PhreeqcRM".
BMI PhreeqcRM is a partial interface to PhreeqcRM, and provides 
the methods to implement chemical reactions in a multicomponent
transport model. All of the native PhreeqcRM methods (non BMI
methods) are also available, which provides a complete
interface to PhreeqcRM.

Returns
-------
str
    The string "BMI PhreeqcRM".

Examples
--------

>>> import phreeqcrm as rm
>>> bmi = rm.bmi_phreeqcrm()
>>> print(bmi.get_component_name())
BMI PhreeqcRM
)pbdoc";

///////////////////////////////////////////////////////////////////////////////

const std::string get_components_docstring =
R"pbdoc(Component list that was generated by calls to @FindComponents@.

Returns
-------
tuple(str)
    Each str is a component name.

Examples
--------

>>> import phreeqcrm as rm
>>> bmi = rm.bmi_phreeqcrm()
>>> bmi.initialize("AdvectBMI_py.yaml")
>>> components = bmi.get_components()
>>> print(components)
('H', 'O', 'Charge', 'Ca', 'Cl', 'K', 'N', 'Na')
)pbdoc";

///////////////////////////////////////////////////////////////////////////////

const std::string get_grid_size_docstring =
R"pbdoc(Get the total number of cells defined.

get_grid_size returns the number of cells specified
by the YAML configuration file. If not specified a
default value of 10 is used.

Parameters
----------
grid : int
    Grid number, only grid 0 is considered.

Returns
-------
int
    Same value as GetGridCellCount is returned for grid 0;
    0 for all other values of `grid`.
)pbdoc";

///////////////////////////////////////////////////////////////////////////////

const std::string initialize_docstring =
R"pbdoc(Initializes the bmi_phreeqcrm instance.

A YAML file used for initialization contains a YAML map of
bmi_phreeqcrm methods and the arguments corresponding to
each method.

Parameters
----------
config_file : str, optional
    The path to the model configuration file.
)pbdoc";

///////////////////////////////////////////////////////////////////////////////

const std::string update_docstring =
R"pbdoc(Advance model state by one time step.

Runs PhreeqcRM for one time step. This method is equivalent to
@ref RunCells. PhreeqcRM will equilibrate the solutions with all equilibrium 
reactants (EQUILIBRIUM_PHASES, EXCHANGE, GAS_PHASE, SOLID_SOLUTIONS, and SURFACE) 
and integrate KINETICS reactions for the specified time step 
(@ref SetValue "TimeStep" or @ref SetTimeStep).
)pbdoc";

///////////////////////////////////////////////////////////////////////////////

const std::string update_until_docstring =
R"pbdoc(Advance model state until the given time.

Parameters
----------
end_time : float
    Time at the end of the time step. 

update_until is the same as @ref update, except the time step is calculated
from the argument @a end_time. The time step is calculated to be @a end_time minus 
the current time (@ref GetCurrentTime).
)pbdoc";


#endif /* _INC_DOCSTRINGS_H */